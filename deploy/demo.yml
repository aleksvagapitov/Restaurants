version: "3.5"

services:
  frontend:
    image: my-registry:55000/rest-front:ci-${BUILD_NUMBER}
    ports:
      - 80
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.restaurants-front.rule=Host(`restaurants.aleksvagapitov.com`)' # Put in your domain
        - 'traefik.http.routers.restaurants-front.entrypoints=websecure'
        - 'traefik.http.routers.restaurants-front.tls.certresolver=letsencrypt'
        - 'traefik.http.routers.restaurants-front.service=restaurants-front-service'
        - 'traefik.http.services.restaurants-front-service.loadbalancer.server.port=80' # Required in swarms, https://doc.traefik.io/traefik/v2.0/routing/providers/docker/#services
    networks:
      - infrastructure

  backend:
    image: my-registry:55000/rest-back:ci-${BUILD_NUMBER}
    depends_on:
      - "restaurants-db"
      - "mailhog"
      - "minio"
    environment:
      ConnectionStrings__DatabaseConnection: "Host=restaurants-db;Port=5432;Username=user;Password=password123;Database=Restaurants;"
      EmailSettings__MailServer: "mailhog"
      EmailSettings__MailPort: 1025
      Minio__Endpoint: "minio:9000"
      Minio__ApiSecret: "minioadmin"
      Minio__ApiKey: "minioadmin"
      Minio__BucketName: "restaurants"
      Minio__AccessPoint: "minio:9000"
      LocationApiParameters__ApiKey: ""
      TokenKey: "super secret key"
    ports:
      - 3000:80
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.restaurants-back.rule=(Host(`restaurants.aleksvagapitov.com`) && PathPrefix(`/api`))' # Put in your domain
        - 'traefik.http.routers.restaurants-back.entrypoints=websecure'
        - 'traefik.http.routers.restaurants-back.tls.certresolver=letsencrypt'
        - 'traefik.http.routers.restaurants-back.service=restaurants-back-service'
        - 'traefik.http.services.restaurants-back-service.loadbalancer.server.port=80' # Required in swarms, https://doc.traefik.io/traefik/v2.0/routing/providers/docker/#services
    links:
      - "restaurants-db:restaurants-db"
      - "mailhog:mailhog"
      - "minio:minio"
    networks:
      - infrastructure

  restaurants-db:
    image: postgis/postgis:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: Restaurants
      POSTGRES_PASSWORD: password123
      POSTGRES_USER: user
    networks:
      - infrastructure

  mailhog:
    image: mailhog/mailhog
    ports:
      - 8025
      - 1025
    networks:
      - infrastructure
    
  minio:
    image: minio/minio
    ports:
      - 9000
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: 'server /export'
    networks:
      - infrastructure

networks:
  infrastructure:
    external: true
